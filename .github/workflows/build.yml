name: Build, Tag, and Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine new tag
        id: tag
        shell: bash
        run: |
          NEW_TAG="v0.0.${{ github.run_number }}"
          echo "New tag is $NEW_TAG"
          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

          
      - name: Build updater
        run: pyinstaller --onefile --clean --noupx updater.py



      
      - name: Get version from tag and write to version_info.py
        run: |
          $version = "${{ steps.tag.outputs.tag }}".TrimStart("v")
          echo "__version__ = '$version'" | Out-File -Encoding ASCII version_info.py
        shell: pwsh

      - name: Build executable
        run: pyinstaller --onefile --windowed --icon=icon.ico --name VoiceAssistant.exe --add-data "annoying_dog.gif;." voice_assistant_new_ui.py

      - name: Upload Updater Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/updater.exe
          asset_name: updater.exe
          asset_content_type: application/octet-stream
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/VoiceAssistant.exe
          asset_name: VoiceAssistant.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
